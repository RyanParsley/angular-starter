{
  "name": "grunt-junit",
  "description": "A small alteration to grunt's default phantom.js and qunit.js files to generate JUnit xml for qunit test results",
  "version": "0.1.6",
  "homepage": "https://github.com/johnbender/grunt-junit",
  "author": {
    "name": "John Bender",
    "email": "john.m.bender@gmail.com",
    "url": "johnbender.us"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/johnbender/grunt-junit.git"
  },
  "bugs": {
    "url": "https://github.com/johnbender/grunt-junit/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/johnbender/grunt-junit/blob/master/LICENSE-MIT"
    }
  ],
  "main": "tasks/grunt-junit",
  "engines": {
    "node": ">=0.6.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "grunt": "~0.3.9",
    "semver": ">=1.0.14"
  },
  "devDependencies": {
    "grunt": "~0.3.9",
    "libxmljs-easy": "0.1.0",
    "glob-whatev": "~0.1.4"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-junit\n\nA small alteration to grunt's default phantom.js and qunit.js files to render rudimentary junit compatible xml for use with Jenkins.\n\n**Warning** This is primarily used to \"get the job done\" and there are issues with test timeouts generating broken xml and the testnames in the junit xml output. Feel free to submit PR's if you are feeling frisky.\n\n## Important\n\nThis plugin currently overrides the default phantom.js and qunit.js files that are included with grunt.\n\n## Getting Started\nInstall the module with `npm install grunt-junit` and then add the following to your `grunt.js` file.\n\n```javascript\ngrunt.loadNpmTasks( \"grunt-junit\" );\n```\n\nThen from the command line:\n\n    JUNIT_OUTPUT=test-output-dir/ grunt junit\n\nAll the xml can be found inside the `test-output-dir/`.\n\n## Further Information\n\nThe file names will take the form `TEST-<dasherized-url>.xml` and can be globed easily for use with a CI like Jenkins.\n\nPlease note that the \"dasherizing\" is most likely exceptionally fragile, so please do report issues with specific test urls and I'll make corrections\n\nThe junit task is identical to the running qunit save for the additional xml rendering to the output directory. You can find information on configuring the qunit grunt task [here](https://github.com/cowboy/grunt/blob/master/docs/task_qunit.md).\n\n## Tests/Dev\n\nFor any and all commands that have `grunt` you can replace them with `node node_modules/.bin/grunt` after an `npm install`.\n\nThe test suite runs a dummy qunit test that will generate the junit xml and then the test suite will check the xml for some basic properties. You can run the test suite with:\n\n    npm install\n    JUNIT_OUTPUT=test/output/ grunt junit --force\n\nThe initial test suite contains failures to test for the failure xml, and as a result the `--force` option is necessary. Obviously this also means you need to ignore the initial qunit failures and focus on the test out put from the `test:files` task.\n\n## Contributing\nIn lieu of a formal style guide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using `grunt lint` from the project root.\n\n## License\nCopyright (c) 2012 John Bender\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-junit@0.1.6",
  "_from": "grunt-junit@^0.1.6"
}
