{
  "name": "grunt-bower-map",
  "description": "Copy Bower dependencies.",
  "version": "0.1.4",
  "homepage": "https://github.com/tylerbeck/grunt-bower-map",
  "author": {
    "name": "Tyler Beck",
    "email": "code@tylerbeck.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tylerbeck/grunt-bower-map.git"
  },
  "bugs": {
    "url": "https://github.com/tylerbeck/grunt-bower-map/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/tylerbeck/grunt-bower-map/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-bower-install-simple": "^1.0.3",
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-nodeunit": "^0.3.3",
    "grunt": "~0.4.5"
  },
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "bower": "^1.3.12",
    "glob": "~3.2.9",
    "lodash": "~2.4.1",
    "matchdep": "~0.3.0"
  },
  "readme": "# grunt-bower-map\n\n> Copy bower component files.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-bower-map --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-bower-map');\n```\n\n## The \"bower_map\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `'bower-map'` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n   'bower-map': {\n       default: {\n           options: {\n                dest: 'lib',\n           }\n       }\n   }\n});\n```\n\n### Options\n\n#### dest (required)\nType: `String`\nDefault value: `undefined`\n\nThe default base path into which components are copied.\n\n\n#### bowerPath\nType: `String`\nDefault value: `'bower_components'`\n\nPath to the Bower install directory.\n\n#### ignore\nType: `Array`\nDefault value: `[]`\n\nAn array of bower component names to ignore.\n\n#### maintainCommonPaths\nType: `Boolean`\nDefault value: `false`\n\nWhen set to false (the default value) unmapped files are copied relative to their highest-level common directory,\notherwise files are copied based on path to component root.\n\n#### map\nType: `Object`\nDefault value: `undefined`\n\nAn object used to remap component file destinations.\nMap values can rename or put component files in a location other than the default libPath\n```allowable values\n  <file-path>: <new-file-path>\n  <directory>: <new-directory>\n  <component>:{\n       <relative-file-path>: <new-file-path>\n       <relative-directory>: <new-directory>\n  }\n```\n\n#### shim\nType: `Object`\nDefault value: `undefined`\n\nAn object used to specify or replace the value of 'main' defined in bower.json or package.json for the specified keys (component names).\n\n#### useNamespace\nType: `Boolean|undefined`\nDefault value: `undefined`\n\nIf true, all files are namespaced in destination using package name.\nIf false, all files use the destination as a base folder.\nIf undefined, only packages more than one file (per sub-task) are written to namespaced directories.\n\n\n\n### Usage Examples\n\n#### Default Options\nIn this example all bower components with a `bower.json` file that have a `main` attribute will be copied to `assets/lib/[component_name]/*`\n\n```js\ngrunt.initConfig({\n  'bower-map': {\n\tdest: 'assets/lib/',\n  },\n});\n```\n\n#### Custom Options\n\n```js\ngrunt.initConfig({\n\t\t'bower-map': {\n\t\t\toptions:{\n\t\t\t\tbowerPath: \"bower_components\",\n\t\t\t\tuseNamespace: false,\n\t\t\t\tignore: [\"ignore-package\"],\n\t\t\t\tshim:{\n\t\t\t\t\tq: \"q.js\"\n\t\t\t\t}\n\t\t\t},\n\t\t\tcss: {\n\t\t\t\toptions:{\n\t\t\t\t\tdest: \"lib/css\",\n\t\t\t\t\textensions:['css']\n\t\t\t\t}\n\t\t\t},\n\t\t\tjs: {\n\t\t\t\toptions:{\n\t\t\t\t\tdest: \"lib/js\",\n\t\t\t\t\textensions:['js']\n\t\t\t\t}\n\t\t\t},\n\t\t\tless: {\n\t\t\t\toptions:{\n\t\t\t\t\tdest: \"lib/less\",\n\t\t\t\t\textensions:['less']\n\t\t\t\t}\n\t\t\t},\n\t\t\tfonts: {\n\t\t\t\toptions:{\n\t\t\t\t\tdest: \"lib/fonts\",\n\t\t\t\t\textensions:['ttf','woff','eot','svg']\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n0.1.0",
  "readmeFilename": "README.md",
  "_id": "grunt-bower-map@0.1.4",
  "_from": "grunt-bower-map@^0.1.0"
}
