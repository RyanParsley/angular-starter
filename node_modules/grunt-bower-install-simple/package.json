{
  "name": "grunt-bower-install-simple",
  "homepage": "http://github.com/rse/grunt-bower-install-simple",
  "description": "Grunt Task for Installing Bower Dependencies",
  "version": "1.1.0",
  "license": "MIT",
  "author": {
    "name": "Ralf S. Engelschall",
    "email": "rse@engelschall.com",
    "url": "http://engelschall.com"
  },
  "keywords": [
    "gruntplugin",
    "bower",
    "install",
    "dependencies"
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/rse/grunt-bower-install-simple.git"
  },
  "bugs": {
    "url": "http://github.com/rse/grunt-bower-install-simple/issues"
  },
  "main": "Gruntfile.js",
  "devDependencies": {
    "grunt": "~0.4.5",
    "grunt-cli": "~0.1.13",
    "grunt-contrib-jshint": "~0.10.0",
    "grunt-contrib-clean": "~0.6.0",
    "grunt-eslint": "~1.1.0"
  },
  "dependencies": {
    "bower": "~1.3.12",
    "chalk": "~0.5.1"
  },
  "peerDependencies": {
    "grunt": ">=0.4.0"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "readme": "\n# grunt-bower-install-simple\n\nGrunt Task for Installing Bower Dependencies\n\n<p/>\n<img src=\"https://nodei.co/npm/grunt-bower-install-simple.png?downloads=true&stars=true\" alt=\"\"/>\n\n<p/>\n<img src=\"https://david-dm.org/rse/grunt-bower-install-simple.png\" alt=\"\"/>\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/)\nbefore, be sure to check out the [Getting\nStarted](http://gruntjs.com/getting-started) guide, as it explains how\nto create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as\ninstall and use Grunt plugins. Once you're familiar with that process,\nyou may install this plugin with this command:\n\n```shell\nnpm install grunt-bower-install-simple --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your\nGruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks(\"grunt-bower-install-simple\");\n```\n\n## Task Options\n\n- `color` (default `true`): Whether output is colorized.\n  The equivalent of `bower --config.color=<value>`.\n\n- `cwd` (default `process.cwd()`): The directory from which Bower should run.\n  All relative paths in Bower will be calculated according to this.\n  The equivalent of ``bower --config.cwd=`pwd` ``.\n\n- `forceLatest` (default `false`): Force latest dependency version on conflict.\n  The equivalent of `bower install --force-latest`.\n\n- `production` (default `false`): Do not install project `devDependencies`.\n  The equivalent of `bower install --production`.\n\n- `interactive` (default `true`): Makes Bower interactive, prompting whenever necessary.\n  The equivalent of `bower --config.interactive=true`.\n\n- `directory` (default `undefined`): The path in which installed components should be saved.\n  This defaults to `bower_components`.\n  The equivalent of `bower --config.directory=<dir>`.\n\n- `update` (default `false`): Makes the plugin run `bower update` instead of `bower install`.\n\n## Task Calling\n\n_Run this task with the `grunt bower-install-simple` command._\n\nTask targets, files and options may be specified according to the Grunt\n[Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n## Usage Example\n\nAssuming we have the following build environment:\n\n- `Gruntfile.js`:\n\n```js\n// [...]\ngrunt.initConfig({\n    \"bower-install-simple\": {\n        options: {\n            color: true,\n            directory: \"lib\"\n        },\n        \"prod\": {\n            options: {\n                production: true\n            }\n        },\n        \"dev\": {\n            options: {\n                production: false\n            }\n        }\n    }\n});\ngrunt.registerTask(\"bower-install\", [ \"bower-install-simple\" ]);\n// [...]\n```\n\n- `bower.json`:\n\n```json\n{\n    \"name\": \"sample\",\n    \"version\": \"0.0.0\",\n    \"devDependencies\": {\n        \"componentjs\":    \"~1.1.1\",\n        \"jquery\":         \"~2.1.1\",\n        \"lodash\":         \"~2.4.1\"\n    }\n}\n```\n\nThen running `grunt bower-install` is functionality-wise equivalent\nto running `bower --config.color=false --config.directory=lib install\n--production`. It will read the `bower.json` and install ComponentJS,\njQuery and Lo-Dash into the local `lib` directory.\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-bower-install-simple@1.1.0",
  "_from": "grunt-bower-install-simple@^1.0.3"
}
