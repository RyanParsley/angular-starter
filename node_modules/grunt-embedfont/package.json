{
  "name": "grunt-embedfont",
  "description": "Create web-embeddable font files and css.",
  "version": "0.1.2",
  "homepage": "https://github.com/tylerbeck/grunt-embedfont",
  "author": {
    "name": "Tyler Beck",
    "email": "code@tylerbeck.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tylerbeck/grunt-embedfont.git"
  },
  "bugs": {
    "url": "https://github.com/tylerbeck/grunt-embedfont/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/tylerbeck/grunt-embedfont/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "^0.9.2",
    "grunt-contrib-clean": "^0.5.0",
    "grunt-contrib-nodeunit": "^0.3.3",
    "grunt": "~0.4.5"
  },
  "peerDependencies": {
    "grunt": "~0.4.5"
  },
  "keywords": [
    "gruntplugin",
    "font",
    "font-generator",
    "webfont",
    "font-face"
  ],
  "dependencies": {
    "fs-extra": "^0.12.0",
    "lodash": "^2.4.1",
    "q": "^1.0.1"
  },
  "readme": "# grunt-embedfont\n\n> Create web-embeddable font files and css.\n\n## Usage Notice\nBefore converting fonts, please ensure that you are allowed to do so.\nEnd-users of this software are solely responsible for securing and maintaining the right to convert and use fonts from the fonts' copyright holder.\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.5`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n## Installation\n\n### OS X\n\n```\nbrew install ttfautohint fontforge --with-python\nnpm install grunt-embedfont --save-dev\n```\n\n*You may need to use `sudo` for `brew`, depending on your setup.*\n\n### Linux\n\n```\nsudo apt-get install fontforge ttfautohint --with-python\nnpm install grunt-embedfont --save-dev\n```\n\n### Windows\n\nNot currently supported; future plans include utilizing a node-only font conversion engine.\n\n\n\n## GruntFile\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-embedfont');\n```\n\n## The \"embedfont\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `embedfont` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  embedfont: {\n    default: {\n\t    options:{\n\t\t    fontPath: 'assets/fonts',\n\t\t    stylePath: 'assets/less',\n\t\t    relPath: '../fonts',\n\t\t    output: 'less',\n\t    },\n\t    fonts: {\n\t\t    FontFamilyOne: {\n\t\t\t    normal: {\n\t\t\t\t    '200': 'font-src/FontOne-Light.ttf',\n\t\t\t\t    '400': 'font-src/FontOne-Regular.ttf',\n\t\t\t\t    '700': 'font-src/FontOne-Bold.ttf'\n\t\t\t    },\n\t\t\t    italic: {\n\t\t\t\t    '200': 'font-src/FontOne-LightItalic.ttf',\n\t\t\t\t    '400': 'font-src/FontOne-RegularItalic.ttf',\n\t\t\t\t    '700': 'font-src/FontOne-BoldItalic.ttf'\n\t\t\t    }\n\t\t    },\n\t\t    FontFamilyTwo: {\n\t\t\t    normal: {\n\t\t\t\t    '400': 'font-src/FontTwo-Regular.ttf',\n\t\t\t    }\n\t\t    },\n\t    }\n\n    },\n  },\n});\n```\n\n### Options\n\n#### options.fontPath\nType: `String`\nDefault value: `'fonts'`\n\nThe font directory path; fonts will be saved to this path.\n\n#### options.stylePath\nType: `String`\nDefault value: `'style'`\n\nThe style directory path; CSS / Less will be saved to this path.\n\n#### options.relPath\nType: `String`\nDefault value: `'../fonts'`\n\nThe relative path from the style directory to font directory.\n\n#### options.output\nType: `String`\nDefault value: `'less'`\nPossible values: `'less'` `'css'`\n\nThe format of stylesheet to output.\n\n#### options.reformatNames\nType: `Boolean`\nDefault value: `true`\n\nWhen reformat names is set to true, font names are created using options.reformatFn.\n\n#### options.reformatFn\nType: `Function`\nFunction Signature: `function( name, style, weight ){ return fontNameString; }`\nDefault function return value: `[name]-[weight]-[style]`\n\nReformat function should return a font name without extension.\n\n\n#### options.fontTypes\nType: `Array of Strings`\nDefault value: `['ttf','woff','eot','svg']`\n\nAn array of font types to generate.\n\n### Usage Examples\n\nTODO\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n0.1.0",
  "readmeFilename": "README.md",
  "_id": "grunt-embedfont@0.1.2",
  "_from": "grunt-embedfont@^0.1.1"
}
