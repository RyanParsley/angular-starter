{
  "name": "grunt-phantomflow",
  "version": "0.2.2",
  "description": "UI Web testing with decision trees and PhantomCSS",
  "homepage": "https://github.com/Huddle/grunt-phantomflow",
  "author": "",
  "bugs": {
    "url": "https://github.com/Huddle/grunt-phantomflow/issues"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/Huddle/grunt-phantomflow.git"
  },
  "keywords": [
    "gruntplugin",
    "ui",
    "testing",
    "visual",
    "regression",
    "phantomcss",
    "phantomjs",
    "casperjs",
    "css",
    "html",
    "flow",
    "user",
    "tdd",
    "bdd",
    "assert",
    "d3",
    "visualisation"
  ],
  "main": "Gruntfile.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "grunt-contrib-connect": "~0.5.0",
    "phantomflow": "~0.4.0"
  },
  "license": "MIT",
  "readme": "# grunt-phantomflow\n\n> A grunt plugin for [PhantomFlow](https://github.com/Huddle/PhantomFlow)\n\n## Grunt\n\n### Basics\n\nThis plugin requires Grunt `~0.4.2`\n\nIf you are unfamilar with [Grunt](http://gruntjs.com/) check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins.\n\n```shell\nnpm install grunt-phantomflow --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-phantomflow');\n```\n\n### Command line parameters\n\nAll command line parameters can be used in conjuntion with each other.\n\n#### Running a specific test\n\nIf you're working on a test you can use the `test` parameter to run a specific test file. The value can be a substring of the file name.\n\n`grunt phantomflow:websitetests --test=mytestfile`\n\n#### Multithreading\n\nBy default phantomflow will divide and execute groups of tests concurrantly on different threads.  By default this is 4 threads\n\nUse the thread parameter to increase the amount of threads and reduce the feedback time.\n\n`grunt phantomflow:websitetests --threads=8`\n\n#### Debugging\n\nShow more logging: `grunt phantomflow:websitetests --debug=1`\n\nSave screenshots and show more logging: `grunt phantomflow:websitetests --debug=2`\n\nBy default phantomflow will not abort when a test fails, set the `earlyexit` parameter to true stop the tests upon seeing the first failure.\n\n`grunt phantomflow:websitetests --earlyexit=true`\n\n### Overview\nIn your project's Gruntfile, use either `grunt.initConfig( {} )` or `grunt.config.set( 'phantomflow', {} )`.\n\n```js\n\nvar phantomflowConfig = {\n  test: {\n    tests: '/mytests'\n  },\n  report: {} // this task is reserved for reporting only\n};\n\ngrunt.initConfig({\n  decision: phantomflowConfig\n};\n```",
  "readmeFilename": "README.md",
  "_id": "grunt-phantomflow@0.2.2",
  "_from": "grunt-phantomflow@^0.2.2"
}
